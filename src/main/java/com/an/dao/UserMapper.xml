<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.an.dao.UserMapper">
	<resultMap id="BaseResultMap" type="com.an.entity.User">
		<id column="user_id" property="userId" jdbcType="BIGINT" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="user_tel" property="userTel" jdbcType="VARCHAR" />
		<result column="user_email" property="userEmail" jdbcType="VARCHAR" />
		<result column="user_role" property="userRole" jdbcType="VARCHAR" />
		<result column="user_integral" property="userIntegral"
			jdbcType="INTEGER" />
		<result column="user_gender" property="userGender" jdbcType="VARCHAR" />
		<result column="user_introduce" property="userIntroduce"
			jdbcType="VARCHAR" />
		<result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		user_id, user_name, password, user_tel, user_email,
		user_role, user_integral,
		user_gender,
		user_introduce, create_date
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from tb_user
		where user_id = #{userId,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		tb_user
		where user_id = #{userId,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.an.entity.User">
		insert into tb_user (user_id,
		user_name, password,
		user_tel, user_email, user_role,
		user_introduce,
		create_date)
		values (#{userId,jdbcType=BIGINT},
		#{userName,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{userTel,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR},
		#{userRole,jdbcType=VARCHAR},
		#{userIntroduce,jdbcType=VARCHAR},
		#{createDate,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.an.entity.User">
		insert into tb_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="userTel != null">
				user_tel,
			</if>
			<if test="userEmail != null">
				user_email,
			</if>
			<if test="userRole != null">
				user_role,
			</if>
			<if test="userIntegral != null">
				user_integral,
			</if>
			<if test="userGender != null">
				user_gender,
			</if>
			<if test="userIntroduce != null">
				user_introduce,
			</if>
			<if test="createDate != null">
				create_date,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="userTel != null">
				#{userTel,jdbcType=VARCHAR},
			</if>
			<if test="userEmail != null">
				#{userEmail,jdbcType=VARCHAR},
			</if>
			<if test="userRole != null">
				#{userRole,jdbcType=VARCHAR},
			</if>
			<if test="userIntegral != null">
				#{userIntegral,jdbcType=INTEGER},
			</if>
			<if test="userGender != null">
				#{userGender,jdbcType=VARCHAR},
			</if>
			<if test="userIntroduce != null">
				#{userIntroduce,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.an.entity.User">
		update tb_user
		<set>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="userTel != null">
				user_tel = #{userTel,jdbcType=VARCHAR},
			</if>
			<if test="userEmail != null">
				user_email = #{userEmail,jdbcType=VARCHAR},
			</if>
			<if test="userRole != null">
				user_role = #{userRole,jdbcType=VARCHAR},
			</if>
			<if test="userIntegral != null">
				user_integral = #{userIntegral,jdbcType=INTEGER},
			</if>
			<if test="userGender != null">
				user_gender = #{userGender,jdbcType=VARCHAR},
			</if>
			<if test="userIntroduce != null">
				user_introduce = #{userIntroduce,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				create_date = #{createDate,jdbcType=TIMESTAMP},
			</if>
		</set>
		where user_id = #{userId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.an.entity.User">
		update tb_user
		set
		user_name = #{userName,jdbcType=VARCHAR},
		password =
		#{password,jdbcType=VARCHAR},
		user_tel = #{userTel,jdbcType=VARCHAR},
		user_email = #{userEmail,jdbcType=VARCHAR},
		user_role =
		#{userRole,jdbcType=VARCHAR},
		user_integral =
		#{userIntegral,jdbcType=INTEGER},
		user_gender =
		#{userGender,jdbcType=VARCHAR},
		user_introduce =
		#{userIntroduce,jdbcType=VARCHAR},
		create_date =
		#{createDate,jdbcType=TIMESTAMP}
		where user_id =
		#{userId,jdbcType=BIGINT}
	</update>

	<!-- 根据用户名查询一个结果，返回值类型为User对象 -->
	<select id="selectByUsername" resultType="com.an.entity.User">
		select
		u.user_id as
		userId,
		u.user_name as userName,
		u.password as password,
		u.user_tel as
		userTel,
		u.user_email as userEmail,
		u.user_role as userRole,
		u.user_integral as userIntegral,
		u.user_gender as userGender,
		u.user_introduce as userIntroduce,
		u.create_date as createDate
		from
		tb_user u
		where
		u.user_name = #{userName}
	</select>

	<select id="selectPageCount" parameterType="java.lang.String"
		resultType="java.lang.Long">
		select count(1) from tb_user u where u.user_tel like
		#{searchUserStr}
	</select>

	<select id="findUserDataByPageAndCount" resultMap="BaseResultMap">
		select * from
		tb_user u where u.user_tel like #{arg2} limit #{arg1},#{arg0}
	</select>

	<delete id="deleteById" parameterType="java.lang.Integer">
		delete from tb_user where
		user_id = #{userId}
	</delete>

	<select id="findById" resultType="com.an.entity.User">
		select
		u.user_id as
		userId,
		u.user_name as userName,
		u.password as password,
		u.user_tel as userTel,
		u.user_email as userEmail,
		u.user_role as userRole,
		u.user_integral as
		userIntegral,
		u.user_gender as userGender,
		u.user_introduce as
		userIntroduce,
		u.create_date as createDate
		from tb_user u
		where
		u.user_id
		= #{arg0}
	</select>

	<update id="updateById" parameterType="com.an.entity.User">
		update tb_user
		<set>
			<if test="userName != null">user_name = #{userName},</if>
			<if test="password != null">password=#{password},</if>
			<if test="userTel != null">user_tel=#{userTel},</if>
			<if test="userEmail != null">user_email = #{userEmail},</if>
			<if test="userRole != null">user_role =#{userRole},</if>
			<if test="userIntegral != null">user_integral =#{userIntegral},</if>
			<if test="userGender != null">user_gender = #{userGender},</if>
			<if test="userIntroduce != null">user_introduce=#{userIntroduce},</if>
			<if test="createDate != null">create_date=#{createDate}</if>
		</set>
		where
		user_id =
		#{userId}
	</update>
	
	<select id="findByTel" resultType="com.an.entity.User">
		select
		u.user_id as
		userId,
		u.user_name as userName,
		u.password as password,
		u.user_tel as userTel,
		u.user_email as userEmail,
		u.user_role as userRole,
		u.user_integral as
		userIntegral,
		u.user_gender as userGender,
		u.user_introduce as
		userIntroduce,
		u.create_date as createDate
		from tb_user u
		where
		u.user_tel
		= #{arg0}
	</select>
</mapper>